/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra;

import cfg.Properties;
import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Article;
import hr.algebra.model.Category;
import hr.algebra.model.CategoryListModel;
import hr.algebra.utils.FileUtils;
import hr.algebra.utils.IconUtils;
import hr.algebra.utils.MessageUtils;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Fishie
 */
public class ArticleEditor extends javax.swing.JDialog {

    private Repository repository;
    private Article article = new Article();
    private CategoryListModel categoryListModel = new CategoryListModel();
    
    
    private void initRepository() {
        try {
            repository = RepositoryFactory.getRepository();
        } catch (Exception ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            if (Properties.DEBUG == 1) MessageUtils.showErrorMessage("Error", ex.getLocalizedMessage());
        }
    }
    
    private void updateList() {
        try {
            //categoryListModel.setCategories(repository.getAllCategoriesOfArticle(article.getId()));
            categoryListModel.setCategories(article.getCategories());
            lstCategories.setModel(categoryListModel);
            lstCategories.revalidate();
            lstCategories.repaint();
            scrCategoryList.revalidate();
            scrCategoryList.repaint();
        } catch (Exception ex) {
            Logger.getLogger(NewsList.class.getName()).log(Level.SEVERE, null, ex);
            if (Properties.DEBUG == 1) MessageUtils.showErrorMessage("Error", ex.getLocalizedMessage());
        }
    }
    
    private void updateImage() {
        File file = new File(System.getProperty("user.dir") + Properties.IMAGE_DIR + article.getImagePath());
        try {
            lblImage.setIcon(IconUtils.createIcon(file, lblImage.getWidth(), lblImage.getHeight()));
        } catch (IOException ex) {
            //swallow the exception because the article can have no image
        }
    }
    
    /**
     * Creates new form ArticleEditor
     */
    public ArticleEditor(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();
        initRepository();
        loadArticle(id);
        
    }
    
    public void loadArticle(int id){
        article.setId(id);
        if(id < 0){
            updateList();
        } else {
            try {
                Optional<Article> article = repository.getArticle(id);
                if(article.isPresent()){
                    this.article = article.get();
                    
                    txtTitle.setText(article.get().getTitle());
                    txtBody.setText(article.get().getBody());
                    txtDate.setText(article.get().getPublishedDate().format(Article.DATE_FORMAT));
                    
                    List<Category> categories = new ArrayList<>();
                    if(id >= 0){
                        categories = repository.getAllCategoriesOfArticle(this.article.getId());
                    }
                    
                    this.article.setCategories(categories);

                    updateList();
                    updateImage();
                    
                }
            } catch (Exception ex) {
                Logger.getLogger(ArticleViewer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBody = new javax.swing.JTextArea();
        scrCategoryList = new javax.swing.JScrollPane();
        lstCategories = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtTitle = new javax.swing.JTextArea();
        txtDate = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnEditImage = new javax.swing.JButton();
        btnAssignCategory = new javax.swing.JButton();
        btnUnassignCategory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Article Editor");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/image.png"))); // NOI18N
        lblImage.setPreferredSize(new java.awt.Dimension(320, 240));

        jScrollPane1.setHorizontalScrollBar(null);

        txtBody.setColumns(20);
        txtBody.setLineWrap(true);
        txtBody.setRows(5);
        txtBody.setText("Body");
        txtBody.setWrapStyleWord(true);
        txtBody.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBodyKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtBody);

        scrCategoryList.setViewportView(lstCategories);

        txtTitle.setColumns(20);
        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTitle.setLineWrap(true);
        txtTitle.setRows(1);
        txtTitle.setText("Title");
        txtTitle.setToolTipText("");
        txtTitle.setWrapStyleWord(true);
        txtTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTitleKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtTitle);

        txtDate.setText("Date");
        txtDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDateKeyTyped(evt);
            }
        });

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/ok.png"))); // NOI18N
        btnOK.setPreferredSize(new java.awt.Dimension(64, 64));
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/cancel.png"))); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(64, 64));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnEditImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/edit_img.png"))); // NOI18N
        btnEditImage.setPreferredSize(new java.awt.Dimension(64, 64));
        btnEditImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditImageActionPerformed(evt);
            }
        });

        btnAssignCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/add_category.png"))); // NOI18N
        btnAssignCategory.setPreferredSize(new java.awt.Dimension(64, 64));
        btnAssignCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignCategoryActionPerformed(evt);
            }
        });

        btnUnassignCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/remove_category.png"))); // NOI18N
        btnUnassignCategory.setPreferredSize(new java.awt.Dimension(64, 64));
        btnUnassignCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnassignCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(scrCategoryList, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)))
                            .addComponent(jScrollPane3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEditImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUnassignCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAssignCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scrCategoryList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)))
                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssignCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUnassignCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        boolean valid = true;
        
        String title = txtTitle.getText().trim();
        if (title.isEmpty()){
            txtTitle.setBackground(Properties.ERROR_COLOR);
            valid = false;
        }
        
        
        String body = txtBody.getText().trim();
        if (body.isEmpty()){
            txtBody.setBackground(Properties.ERROR_COLOR);
            valid = false;
        }
        
        LocalDate date = LocalDate.now();
        
        try {
            date = LocalDate.parse(txtDate.getText().trim(), Article.DATE_FORMAT);
        } catch (Exception ex) {
            txtDate.setBackground(Properties.ERROR_COLOR);
            valid = false;
        }
        
        
        if(!valid) return;
        article.setTitle(title);
        article.setBody(body);
        article.setPublishedDate(date);
        //article.setImagePath(image);

        int id = article.getId();
        try{
            if(id < 0){
                id = repository.createArticle(article);
            } else {
                repository.updateArticle(article);
            }
            
            //List<Category> categories = repository.getAllCategoriesOfArticle(id);
            List<Category> categories = article.getCategories();
            repository.removeArticleCategories(id);
            for (Category category : categories) {
                repository.assignCategoryToArticle(category.getId(), id);
            }

        }catch(Exception ex){
            Logger.getLogger(ArticleViewer.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to submit article.");
        }



        this.dispose();
        
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAssignCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignCategoryActionPerformed
        CategorySelector window = new CategorySelector(null, true);
        Optional<Category> category = window.showDialog();
        if(!category.isPresent()) return;
        
        try{
            List<Category> categories = article.getCategories();
            categories.add(category.get());
            article.setCategories(categories);
            updateList();
        } catch(Exception ex) {
            Logger.getLogger(ArticleViewer.class.getName()).log(Level.SEVERE, null, ex);
            if (Properties.DEBUG == 1) MessageUtils.showErrorMessage("Error", ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_btnAssignCategoryActionPerformed

    private void btnEditImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditImageActionPerformed
        File file = FileUtils.uploadFile("Image file", "jpg", "jpeg", "png", "gif");
        
        if(file == null) return;
        
        
        UUID uuid = UUID.randomUUID();
        try {
            FileUtils.copy(file.getAbsolutePath(), System.getProperty("user.dir") + Properties.IMAGE_DIR + uuid.toString());
            article.setImagePath(uuid.toString());
        } catch (IOException ex) {
            Logger.getLogger(ArticleEditor.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to upload the image.");
        }
        
        
        //article.setImagePath(file.getAbsolutePath());
        updateImage();
    }//GEN-LAST:event_btnEditImageActionPerformed

    private void txtTitleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTitleKeyTyped
        txtTitle.setBackground(Properties.NORMAL_COLOR);
    }//GEN-LAST:event_txtTitleKeyTyped

    private void txtBodyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBodyKeyTyped
        txtBody.setBackground(Properties.NORMAL_COLOR);
    }//GEN-LAST:event_txtBodyKeyTyped

    private void txtDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateKeyTyped
        txtDate.setBackground(Properties.NORMAL_COLOR);
    }//GEN-LAST:event_txtDateKeyTyped

    private void btnUnassignCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnassignCategoryActionPerformed
        String name = lstCategories.getSelectedValue();
        try {
            Optional<Category> category = repository.getCategoryByName(name);
            if(!category.isPresent()) {
                MessageUtils.showErrorMessage("Error", "No category selected.");
                return;
            }
            
            int choice = MessageUtils.showConfirmDialog("Confirm", "Do you really want to unassign this category?");
            if(choice != JOptionPane.YES_OPTION) return;
            
            List<Category> categories = article.getCategories();
            categories.remove(category.get());
            article.setCategories(categories);
            
            updateList();
            
        } catch (Exception ex) {
            Logger.getLogger(CategorySelector.class.getName()).log(Level.SEVERE, null, ex);
            if (Properties.DEBUG == 1) MessageUtils.showErrorMessage("Error", ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_btnUnassignCategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (Properties.THEME.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArticleEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArticleEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArticleEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArticleEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ArticleEditor dialog = new ArticleEditor(new javax.swing.JFrame(), true, -1);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignCategory;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEditImage;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnUnassignCategory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblImage;
    private javax.swing.JList<String> lstCategories;
    private javax.swing.JScrollPane scrCategoryList;
    private javax.swing.JTextArea txtBody;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextArea txtTitle;
    // End of variables declaration//GEN-END:variables

    
}
